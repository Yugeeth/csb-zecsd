{"version":3,"sources":["App.js","index.js"],"names":["ToDoElement","value","idx","onCompleteToDo","removeToDoItem","style","textAlign","margin","backgroundColor","isCompleted","todo","onClick","App","useState","inputValue","setToDo","todos","updateToDosList","addToDo","ourItem","mTodos","updatedItem","splice","className","textDecoration","type","placeholder","onChange","e","target","length","map","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0LAGMA,EAAc,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eACjD,OACE,qBACEC,MAAO,CACLC,UAAW,OACXC,OAAQ,GACRC,gBAAiBP,EAAMQ,YAAc,YAAc,aAJvD,UAOGR,EAAMS,KACP,wBAAQC,QAAS,kBAAMR,EAAeD,IAAtC,SACID,EAAMQ,YAAgC,kBAAlB,kBAExB,wBAAQE,QAAS,kBAAMP,EAAeF,IAAtC,mCAKS,SAASU,IAEtB,MAA8BC,mBAAS,CACrCH,KAAM,GACND,aAAa,IAFf,mBAAOK,EAAP,KAAmBC,EAAnB,KAMA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAcC,EAAd,KAsCA,OAlCAC,QAAU,WACJJ,EAAWJ,OACbO,EAAgB,GAAD,mBAAKD,GAAL,CAAYF,KAC3BC,EAAQ,CAENL,KAAM,GACND,aAAa,MAOnBN,eAAiB,SAACD,GAChB,IAAMiB,EAAUH,EAAMd,GAChBkB,EAAM,YAAOJ,GAEbK,EAAW,2BACZF,GADY,IAEfV,aAAcU,EAAQV,cAGxBW,EAAOlB,GAAOmB,EACdJ,EAAgBG,IAIlBhB,eAAiB,SAACF,GAChB,IAAMkB,EAAM,YAAOJ,GACnBI,EAAOE,OAAOpB,EAAK,GAEnBe,EAAgBG,IAIhB,sBAAKG,UAAU,MAAf,UACE,oBAAIlB,MAAO,CAAEmB,eAAgB,aAA7B,wBACA,uBACED,UAAU,aACVE,KAAK,OACLxB,MAAOa,EAAWJ,KAClBgB,YAAY,iBACZC,SAAU,SAACC,GAAD,OACRb,EAAQ,CACNL,KAAMkB,EAAEC,OAAO5B,MACfQ,aAAa,OAInB,wBAAQE,QAASO,QAAjB,uBACA,6BACGF,EAAMc,OAAS,GACdd,EAAMe,KAAI,SAAC9B,EAAOC,GAChB,OACE,cAAC,EAAD,CAEED,MAAOA,EACPC,IAAKA,EACLC,eAAgBA,eAChBC,eAAgBA,gBAJXH,EAAMS,KAAOR,WCnFlC,IAAM8B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACxB,EAAD,MAEFoB,K","file":"static/js/main.ba1ce823.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\n\nconst ToDoElement = ({ value, idx, onCompleteToDo, removeToDoItem }) => {\n  return (\n    <li\n      style={{\n        textAlign: \"left\",\n        margin: 15,\n        backgroundColor: value.isCompleted ? \"#5ae31982\" : \"#e3251982\"\n      }}\n    >\n      {value.todo}\n      <button onClick={() => onCompleteToDo(idx)}>\n        {!value.isCompleted ? \"complete task\" : \"uncomplete task\"}\n      </button>\n      <button onClick={() => removeToDoItem(idx)}>remove to do item</button>\n    </li>\n  );\n};\n\nexport default function App() {\n  //for input\n  const [inputValue, setToDo] = useState({\n    todo: \"\",\n    isCompleted: false\n  });\n\n  //for managing todo list\n  const [todos, updateToDosList] = useState([]);\n\n  //3 tasks to complete\n  //add todo\n  addToDo = () => {\n    if (inputValue.todo) {\n      updateToDosList([...todos, inputValue]);\n      setToDo({\n        //reset input field\n        todo: \"\",\n        isCompleted: false\n      });\n    }\n    // console.log(\"our todos: \", todos)\n  };\n\n  //complete todo\n  onCompleteToDo = (idx) => {\n    const ourItem = todos[idx];\n    const mTodos = [...todos];\n    //change object property isCompleted\n    const updatedItem = {\n      ...ourItem,\n      isCompleted: !ourItem.isCompleted\n    };\n    //put updated item into todo list\n    mTodos[idx] = updatedItem;\n    updateToDosList(mTodos);\n  };\n\n  //remove todo\n  removeToDoItem = (idx) => {\n    const mTodos = [...todos];\n    mTodos.splice(idx, 1);\n    //update todos list\n    updateToDosList(mTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ textDecoration: \"underline\" }}>To Do List</h1>\n      <input\n        className=\"inputField\"\n        type=\"text\"\n        value={inputValue.todo}\n        placeholder=\"add to do item\"\n        onChange={(e) =>\n          setToDo({\n            todo: e.target.value,\n            isCompleted: false\n          })\n        }\n      />\n      <button onClick={addToDo}>add To Do</button>\n      <ul>\n        {todos.length > 0 &&\n          todos.map((value, idx) => {\n            return (\n              <ToDoElement\n                key={value.todo + idx}\n                value={value}\n                idx={idx}\n                onCompleteToDo={onCompleteToDo}\n                removeToDoItem={removeToDoItem}\n              />\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}